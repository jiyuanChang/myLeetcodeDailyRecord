https://leetcode.cn/problems/sort-an-array/

class Solution {
    public int[] sortArray(int[] nums) {
        mergeSort(nums);
        return nums;
    }
    private static void mergeSort(int[] nums) {
        int[] temp = new int[nums.length];
        separate(nums, 0, nums.length - 1, temp);
    }
    private static void separate(int[] nums, int left, int right, int[] temp) {
        int mid = (left + right) / 2;

        if (left < right) {
            separate(nums, left, mid, temp);
            separate(nums, mid + 1, right, temp);
            merge(nums, left, right, temp);
        }
    }
    private static void merge(int[] arr, int left, int right, int[] temp) {
        int mid = (left + right) / 2;
        int l = left;//the first element for the first sequence
        int r = mid + 1;//the first element for the second sequence
        int index = 0;
        
        while (l <= mid && r <= right) {
            if (arr[l] < arr[r]) {
                temp[index++] = arr[l++];
            } else {
                temp[index++] = arr[r++];
            }
        }
        while (l <= mid) {
            temp[index++] = arr[l++];
        }
        while (r <= right) {
            temp[index++] = arr[r++];
        }
        index = 0;

        while (left <= right) {
            arr[left++] = temp[index++];
        }
    }
}
