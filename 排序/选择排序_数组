https://leetcode.cn/problems/sort-an-array/solution/pai-xu-shu-zu-by-leetcode-solution/

/**
超时
时间复杂度：比较次数O(n^2 / 2), 交换次数O(n)
**/

class Solution {
    public int[] sortArray(int[] nums) {
        int N = nums.length;
        for (int i = 0; i < N; i++) {
            int min = i;
            for (int j = i + 1; j < N; j++) {
                if (less(nums[j], nums[min])) {
                    min = j;    
                }
            }
            exch(nums, i, min);
        }
        return nums;
    }
    public boolean less(Integer v, Integer w) {
        return v.compareTo(w) < 0;
    }
    public boolean exch(int[] a, int i, int j) {
        int tmp = a[i];
        a[i] = a[j];
        a[j] = tmp;
        return true;
    }
}
